package com.siit.sbnz.sbnztim14.teamcomp

import com.siit.sbnz.sbnztim14.model.AllyChampion;
import com.siit.sbnz.sbnztim14.model.TeamCompositionProbability;

import java.util.List;

// ALLY

//    ATTACK

rule "Ally team, number of champions with HardEngage for Attack comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				hardEngage == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{-20, 13, 28, 36, 38, 40};
		modify($comp){incAttackComp(incs[$list.size()])}
end

rule "Ally team, number of champions with HardCC for Attack comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				hardCC == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 3, 8, 17, 23, 25};
		modify($comp){incAttackComp(incs[$list.size()])}
end

rule "Ally team, number of champions with AoeDamage for Attack comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				aoeDamage == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 8, 17, 29, 33, 35};
		modify($comp){incAttackComp(incs[$list.size()])}
end

//    CATCH

rule "Ally team, number of ASS/DIV/CAT/BUR champions for Catch comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				role == "assassin" ||
				role == "diver" ||
				role == "catcher" ||
				role == "burst"
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 10, 27, 42, 50, 50};
		modify($comp){incCatchComp(incs[$list.size()])}
end

rule "Ally team, number of champions with Mobility for Catch comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				mobility == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 7, 15, 27, 35, 35};
		modify($comp){incCatchComp(incs[$list.size()])}
end

rule "Ally team, number of champions with HardCC for Catch comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				hardCC == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 2, 7, 11, 14, 15};
		modify($comp){incCatchComp(incs[$list.size()])}
end

//    PROTECT

rule "Ally team, number of hyper-carries for Protect comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				goodLate == true,
				role == "marksman" ||
				role == "artillery" ||
				role == "battlemage" ||
				role == "burst"
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 27, 40, 20, 0, 0};
		modify($comp){incProtectComp(incs[$list.size()])}
end

rule "Ally team, if a hyper-carry has disengage better Protect comp"
agenda-group "composition-probability"

	when
		exists AllyChampion(
			goodLate == true,
			disengage == true,
			role == "marksman" ||
			role == "artillery" ||
			role == "battlemage" ||
			role == "burst"
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		modify($comp){incProtectComp(10)}
end

rule "Ally team, number of champions with Disengage CC for Protect comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				hardCC == true,
				disengage == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{-5, 8, 20, 29, 33, 35};
		modify($comp){incProtectComp(incs[$list.size()])}
end

rule "Ally team, number of champions with Utility for Protect comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				utility == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 8, 13, 15, 15, 15};
		modify($comp){incProtectComp(incs[$list.size()])}
end

//    SIEGE

rule "Ally team, number of champions with Poke for Siege comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				poke == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{-10, 5, 20, 32, 36, 40};
		modify($comp){incSiegeComp(incs[$list.size()])}
end

rule "Ally team, number of champions with Disengage CC for Siege comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				hardCC == true,
				disengage == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 10, 20, 25, 28, 30};
		modify($comp){incSiegeComp(incs[$list.size()])}
end

rule "Ally team, if ART exists better Siege comp"
agenda-group "composition-probability"

	when
		exists AllyChampion(
			role == "artillery"
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		modify($comp){incSiegeComp(15)}
end

rule "Ally team, number of champions with Waveclear for Siege comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				waveclear == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 9, 15, 15, 15, 15};
		modify($comp){incSiegeComp(incs[$list.size()])}
end

//    SPLIT

rule "Ally team, number of champions with SplitPush for Split comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				splitPush == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 20, 35, 35, 35, 35};
		modify($comp){incSplitComp(incs[$list.size()])}
end

rule "Ally team, number of JUG/SKI champions with SplitPush for Split comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				splitPush == true,
				role == "juggernaut" ||
				role == "skirmisher"
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 10, 15, 15, 15, 15};
		modify($comp){incSplitComp(incs[$list.size()])}
end

rule "Ally team, number of champions with Waveclear for Split comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				waveclear == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 9, 18, 25, 28, 30};
		modify($comp){incSplitComp(incs[$list.size()])}
end

rule "Ally team, number of champions with Disengage for Split comp"
agenda-group "composition-probability"

	when
		$list : List() from collect(
			AllyChampion(
				disengage == true
			)
		)
		$comp : TeamCompositionProbability(
			team == "ally"
		) @Watch (!*, team)
	then
		int[] incs = new int[]{0, 5, 13, 18, 20, 20};
		modify($comp){incSplitComp(incs[$list.size()])}
end
